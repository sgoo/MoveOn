
#@using jpf-ltl
#@using jpf-aprop
#@using moveon

#target=moveon.controllers.MixedController
#target=test.Test
target=moveon.simulation.Simulator

finite=true

# You need this one to specify the appropriate listener
#listener=gov.nasa.jpf.ltl.ddfs.FiniteListener

# You need this one to specify the search strategy
#search.class=gov.nasa.jpf.ltl.ddfs.DDFSearch

#vm.tree_output=true
#vm.path_output=true


# And you need these jpf-core options, too
#vm.storage.class=gov.nasa.jpf.vm.FullStateSet
#cg.enumerate_random=true
nonshared.throw_on_cycle=true

listener.autoload=\
  javax.annotation.Nonnull,\
  javax.annotation.concurrent.GuardedBy,\
  gov.nasa.jpf.annotation.Const,\
  gov.nasa.jpf.annotation.NonShared,\
  gov.nasa.jpf.annotation.Invariant,\
  gov.nasa.jpf.annotation.Ensures,\
  gov.nasa.jpf.annotation.Requires


listener.javax.annotation.Nonnull=.aprop.listener.NonnullChecker
listener.javax.annotation.concurrent.GuardedBy=.aprop.listener.LockChecker
listener.gov.nasa.jpf.annotation.Const=.aprop.listener.ConstChecker
listener.gov.nasa.jpf.annotation.NonShared=.aprop.listener.NonSharedChecker
listener.gov.nasa.jpf.annotation.Invariant=.aprop.listener.ContractVerifier@pbc
listener.gov.nasa.jpf.annotation.Ensures=.aprop.listener.ContractVerifier@pbc
listener.gov.nasa.jpf.annotation.Requires=.aprop.listener.ContractVerifier@pbc


log.info=gov.nasa.jpf.vm.ClassInfo


#search.properties = gov.nasa.jpf.vm.NotDeadlockedProperty

#listener=gov.nasa.jpf.aprop.listener.ContractVerifier


